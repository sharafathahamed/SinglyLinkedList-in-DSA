//Doubly Linked List

class DoublyLinkedList{
    class Node{
        int data;
        Node prev;
        Node next;
        Node(int data){
            this.data = data;
            this.next=null;
            this.prev=null;
        }
    }
    Node head, tail;
    public void InsertAtBeginning(int data){
        Node newNode = new Node(data);
        if(head==null){
            head=newNode;
            tail=newNode;
        }
        else{
            newNode.next=head;
            head.prev=newNode;
            head = newNode;
        }
    }
    public void InsertAtEnd(int data){
        Node newNode = new Node(data);

        if(head==null){
            head= newNode;
            tail=newNode;
        }
        else{
            tail.next=newNode;
            newNode.prev=tail;
            tail = newNode;
        }
    }
    public void deleteAtBegin(){
        if(head == null){
            System.out.println("Empty");
        }
        if(head==tail){
            head=null;
            tail=null;
        }
        else{
            head=head.next;
            head.prev=null;
        }
    }
    public void deleteAtEnd() {
        if (head == null) {
            System.out.println("Empty");
        }
        if (head == tail) {
            head = null;
            tail = null;
        } else {
            tail = tail.prev;
            tail.next = null;
        }
    }
    public void display(){
        Node temp = head;
        while (temp!=null){
            System.out.println(temp.data+" ");
            temp = temp.next;
        }
        System.out.println();
    }
}
public class DLL {
    public static void main(String[] args) {
        DoublyLinkedList list= new DoublyLinkedList();
        list.InsertAtBeginning(10);
        list.InsertAtBeginning(20);
        list.InsertAtBeginning(30);
        list.InsertAtEnd(50);
        list.deleteAtBegin();
        list.deleteAtEnd();
        list.display();
    }
}
